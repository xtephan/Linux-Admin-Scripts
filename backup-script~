#!/bin/bash
# BASHed by xtephan @ 2012,
# CopyLeft under the terms of GPL

# Assert root
if [[ $EUID -ne 0 ]]; then
echo "This script must be run as root" 1>&2
   exit 1
fi

#init variables
DAILY_BACKUP_DIR="/home/xtephan"
DAILY_EXCLUDE_DIR="/home/xtephan/Downloads;/home/xtephan/Temporary-Files;/home/xtephan/.cache"
TTL_DAILY=5
DAILY_INCREMENTAL="daily.snar"

WEEKLY_BACKUP_DIR="/"
WEEKLY_EXCLUDE_DIR="/tmp;/var/cache;/proc;/dev/pts;/mnt;/media"
TTL_WEEKLY=1

SSH_USER="sensai"
SSH_HOST="server"
SSH_PATH="/mnt/securebackup"
SSHFS_MOUNT_PATH="/mnt/sshfs"

BACKUP_LOCATION="/mnt/sshfs/backup/laptop/"

generate_exclude() {

  EXCLUDE_DIR_CMD=""

  arr=$(echo $1 | tr ";" "\n")

  for x in $arr
  do
      EXCLUDE_DIR_CMD="$EXCLUDE_DIR_CMD --exclude=$x"
  done

}

#----------------mount sshfs-----------------------------------
/usr/bin/sshfs -o allow_other $SSH_USER@$SSH_HOST:$SSH_PATH $SSHFS_MOUNT_PATH

#----------------do daily backup-----------------------------------
if [ "$1" = "daily" ] 
then 
  echo "Doing Daily Update"

  ARH_NAME="$BACKUP_LOCATION$(date +%Y%m%d)-daily.tar.gz"
  generate_exclude $DAILY_EXCLUDE_DIR

  tar -zcp --file $ARH_NAME --listed-incremental="$BACKUP_LOCATION$DAILY_INCREMENTAL" --directory=$DAILY_BACKUP_DIR $EXCLUDE_DIR_CMD . 

  echo "Done!"
  du -h $ARH_NAME

  echo "You Should Purging Older Backups"

  find "$BACKUP_LOCATION*-daily.tar.gz" -type f -mtime $TTL_DAILY 
  #| xargs rm -v
  
fi

##----------------do weekly backup-----------------------------------
if [ "$1" = "weekly" ] 
then 
  echo "Doing Weekly Update"

  ARH_NAME="$BACKUP_LOCATION$(date +%Y%m%d)-weekly.tar.gz"
  generate_exclude $WEEKLY_EXCLUDE_DIR

  tar -zcpf $ARH_NAME --directory=$WEEKLY_BACKUP_DIR $EXCLUDE_DIR_CMD . 

  echo "Done!"
  du -h $ARH_NAME

  echo "You Should Purging Older Backups"

  find "$BACKUP_LOCATION*-weekly.tar.gz" -type f -mtime $TTL_WEEKLY*7 
  #| xargs rm -v

fi


##----------------umount sshfs-----------------------------------
fusermount -u $SSHFS_MOUNT_PATH